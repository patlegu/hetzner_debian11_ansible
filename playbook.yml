#########################################################################
# Title:         hetzner_server_ansible                                 #
# Author(s):     Patrice Le Guyader                                     #
# URL:           none                                                   #
# Hetzner Image: multiples                                              #
# --                                                                    #
#         Part of the hetzner ansible project:                          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Read Hetzner informations from json data files.
  hosts: localhost
  # debugger: on_failed
  vars:
    ansible_debug: false
    # location_name: Helsinki
    # location_name: Falkenstein
    # location_name: Nuremberg
    location_name: Ashburn
    server_type: "cpx51"
  tasks:
    - name: Load the JSON location file content
      ansible.builtin.set_fact:
        hetzner_location: "{{ lookup('file', 'vars/hetzner-location-list.json') | from_json }}"
    - name: Print Hetzner location
      ansible.builtin.debug:
        var: hetzner_location
      when: ansible_debug

    - name: Load the JSON servers types file content
      no_log: false
      ansible.builtin.set_fact:
        hetzner_server_types: "{{ lookup('file', 'vars/hetzner-server-types.json')| from_json }}"

    - name: Affichage du contenu du fichier hetzner-server-types.json
      ansible.builtin.debug: var=hetzner_server_types
      when: ansible_debug

    - name: defining variables
      ansible.builtin.set_fact:
        network_zones: "{{ hetzner_location | map(attribute='network_zone') | join(',') }}"
        eu_central: "{{ hetzner_location | selectattr('network_zone','eq','eu-central')|map(attribute='name')|join(',') }}"
        us_east: "{{ hetzner_location | selectattr('network_zone','eq','us-east')|map(attribute='name')|join(',') }}"
        germany: "{{ hetzner_location | selectattr('country','eq','DE')|map(attribute='name')|join(',') }}"
        finlande: "{{ hetzner_location | selectattr('country','eq','FI')|map(attribute='name')|join(',') }}"
        usa: "{{ hetzner_location | selectattr('country','eq','US')|map(attribute='name')|join(',') }}"
    #   # 
        all_server_types: "{{ hetzner_server_types | map(attribute='name') | join(',') }}"
        core_group_below_2: "{{ hetzner_server_types | selectattr('cores','<',2) | map(attribute='name')| join(',') }}"
        core_group_2_to_3: "{{ hetzner_server_types | selectattr('cores','>=',2) | selectattr('cores','<=',3)| map(attribute='name')| join(',') }}"
        core_group_4_to_6: "{{ hetzner_server_types | selectattr('cores','>',3) | selectattr('cores','<=',6)| map(attribute='name')| join(',') }}"
        core_group_over_6: "{{ hetzner_server_types | selectattr('cores','>',6)| map(attribute='name')| join(',') }}"
        # core_group_2_to_3_and_shared_cpu: "{{ hetzner_server_types | selectattr('cpu_type','eq','shared')| selectattr('name','in',core_group_2_to_3)|map(attribute='name')|join(',')}}"
        requested_group: "{{ hetzner_server_types | selectattr('name','==',server_type) }}"

    - name: debug
      ansible.builtin.debug:
        msg:
          - "-------------------"
          - "Network Zone eu-central"
          - "-------------------"
          - "{{ eu_central }}"
          - "-------------------"
          - "Network Zone us-east"
          - "-------------------"
          - "{{ us_east }}"
          - "-------------------"
          - "Country Germany"
          - "-------------------"
          - "{{ germany }}"
          - "-------------------"
          - "Country Finlande"
          - "-------------------"
          - "{{ finlande }}"
          - "-------------------"
          - "Country United States"
          - "-------------------"
          - "{{ usa }}"
          - "-------------------"
          - "All zones"
          - "-------------------"
          - "{{ network_zones }}"
      when: ansible_debug

    - name: Ansible SelectAttr
      ansible.builtin.debug:
        msg:
          - "==========================="
          - "With SelectAttr - Filter using Attribute name of Object"
          - "==========================="
          - '{{ hetzner_location | selectattr("city", "eq", "Helsinki") }}'
          - ""
          - "==========================="
          - "With Select - We are filtering using regex as the elements of list are treated as a normal string not as object/dict"
          - "==========================="
          - '{{ hetzner_location | select("match", ".+city.+:.+Helsinki.+") }}'
          - ""
      when: ansible_debug

#    - name: "Create addressbook to store"
#      no_log: false
#      set_fact:
#        addressbook: "{{addressbook |default([]) + [{'Name' : item.name, 'country' : item.country, 'Network Zone' : item.network_zone }] }}"
#        addressbook: "{{addressbook |default({}) | combine({'name': item.name}, list_merge='append') }}"
#        addressbook: "{{addressbook + ({ 'name': item.name }) + [{'country' : item.country, 'Network Zone' : item.network_zone}]}}"
#      loop: "{{hetzner_location|json_query('[*]')}}"
#      when: item.key == "name"
#       vars:
#         query: "[*]"
#        query: "[*].{name: name, network_zone: network_zone, country: country}"
#        query: "[?city == '{{ location_name }}'].{name: name, network_zone: network_zone}"

#    - name: The addressbook
#      debug: var=addressbook

######################################################################################
    - name: debug
      ansible.builtin.debug:
        msg:
          - "-------------------"
          - "CPU Cores below 2"
          - "-------------------"
          - "{{ core_group_below_2 }}"
          - "-------------------"
          - "CPU Cores between 2 and 3"
          - "-------------------"
          - "{{ core_group_2_to_3 }}"
          - "-------------------"
          - "CPU Cores between 4 and 6"
          - "-------------------"
          - "{{ core_group_4_to_6 }}"
          - "-------------------"
          - "CPU Cores over 6"
          - "-------------------"
          - "{{ core_group_over_6 }}"
          - "-------------------"
          # - "CPU Cores between 2 and 3 and shared CPU"
          # - "-------------------"
          # - "{{core_group_2_to_3_and_shared_cpu}}"
          - "-------------------"
          - "{{ server_type }} Server type"
          - "-------------------"
          - "{{ requested_group }}"
          - "All Server type"
          - "-------------------"
          - "{{ all_server_types }}"
      # when: ansible_debug

    - name: Caracteristics of servers with more than 6 cores
      no_log: true
      # vars:
        # core_group_over_6: "{{ hetzner_server_types | selectattr('cores','>',6)| map(attribute='name')|join(',') }}"
      ansible.builtin.debug:
        msg: "The server {{ item.name }} has {{ item.cores }} cores with {{ item.disk }} Gb"
      with_items: "{{ hetzner_server_types | selectattr('name','in',core_group_over_6) }}"
      when: ansible_debug

    - name: Content of the hetzner_server_types
      ansible.builtin.debug:
        msg:
          - "==========================="
          - "{{ hetzner_server_types | selectattr('name','in',core_group_over_6) }}"
      when: ansible_debug

    - name: Getting the detail of the requested server for debug
      ansible.builtin.debug:
        msg: "The server {{ item.name }} has {{ item.cores }} cores with {{ item.disk }} Gb"
      with_items: "{{ hetzner_server_types | selectattr('name','eq',server_type) }}"
      # when: ansible_debug

    - name: Getting the cost of the requested server
      ansible.builtin.set_fact:
        vm_location: "{{ hetzner_location | selectattr('city','eq',location_name)|map(attribute='name')|join(',') }}"

    - name: Getting the details of the requested server
      ansible.builtin.set_fact:
        vm_type: "{{ item.name }}"
        vm_cores: "{{ item.cores }}"
        vm_memory: "{{ item.memory }}"
        vm_disk: "{{ item.disk }}"
        vm_price: "{{ item.prices|selectattr('location','eq',vm_location)|map(attribute='price_monthly')|map(attribute='gross')|map('regex_replace', '0{1,}$', '')| product(['EUR'])|map('join',' ')|join(',') }}"
      with_items: "{{ hetzner_server_types | selectattr('name','eq',server_type) }}"

    - name: debugging the detail of the requested server
      ansible.builtin.debug:
        msg:
          - "-------------------"
          - "vm_type: {{ item.name }}"
          - "vm_cores: {{ item.cores }}"
          - "vm_disk: {{ item.disk }}"
          - "Location: {{ vm_location }}"
          - "vm_price: {{ item.prices|selectattr('location','eq',vm_location)|map(attribute='price_monthly')|map(attribute='gross')|map('regex_replace', '0{1,}$', '')| product(['EUR'])|map('join',' ')|join(',') }}"
          - "-------------------"
      with_items: "{{ hetzner_server_types | selectattr('name','eq',server_type) }}"
      when: ansible_debug

    - name: Requested server
      ansible.builtin.debug:
        msg: "The server {{ vm_type }} cost {{ vm_price }} monthly for {{ vm_cores }} cores, {{ vm_memory }}Gb of RAM and {{ vm_disk }} Gb in {{ location_name }}"
      # when: ansible_debug
