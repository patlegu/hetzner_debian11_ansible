#########################################################################
# Title:         hetzner_server_ansible                                 #
# Author(s):     Patrice Le Guyader                                     #
# URL:           none                                                   #
# Docker Image:  multiples                                              #
# --                                                                    #
#         Part of the hetzner ansible project:                          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Read Hetzner informations from json data files.
  hosts: localhost
  vars:
    ansible_debug: true
    location_name: Helsinki
    server_type: "cx31"
    addressbook: {}
  tasks:
    - name: Load the JSON location file content
      set_fact:
        hetzner_location: "{{ lookup('file', 'vars/hetzner-location-list.json') | from_json }}"
    - debug:
        var: hetzner_location
# {
#     "hetzner_location": [
#         {
#             "city": "Falkenstein",
#             "country": "DE",
#             "description": "Falkenstein DC Park 1",
#             "id": 1,
#             "latitude": 50.47612,
#             "longitude": 12.370071,
#             "name": "fsn1",
#             "network_zone": "eu-central"
#         },
#         {
#             "city": "Nuremberg",
#             "country": "DE",
#             "description": "Nuremberg DC Park 1",
#             "id": 2,
#             "latitude": 49.452102,
#             "longitude": 11.076665,
#             "name": "nbg1",
#             "network_zone": "eu-central"
#         },
#         {
#             "city": "Helsinki",
#             "country": "FI",
#             "description": "Helsinki DC Park 1",
#             "id": 3,
#             "latitude": 60.169855,
#             "longitude": 24.938379,
#             "name": "hel1",
#             "network_zone": "eu-central"
#         },
#         {
#             "city": "Ashburn, VA",
#             "country": "US",
#             "description": "Ashburn, VA",
#             "id": 4,
#             "latitude": 39.045821,
#             "longitude": -77.487073,
#             "name": "ash",
#             "network_zone": "us-east"
#         }
#     ]
# }


    # - debug:
    #     msg: "{{ hetzner_location | community.general.json_query(query) | first }}"
    #   vars:
    #     query: "[?city == '{{ location_name }}'].name"
    - name: debug
      vars: 
        eu_central: "{{ hetzner_location | selectattr('network_zone','eq','eu-central') }}"
        us_east: "{{ hetzner_location | selectattr('network_zone','eq','us-east') }}"
        germany: "{{ hetzner_location | selectattr('country','eq','DE') }}"
        finlande: "{{ hetzner_location | selectattr('country','eq','FI') }}"
        usa: "{{ hetzner_location | selectattr('country','eq','US') }}"
      debug:
        msg:
          - "-------------------"
          - "Network Zone eu-central"
          - "-------------------"
          - "{{eu_central}}"
          - "-------------------"
          - "Network Zone us-east"
          - "-------------------"
          - "{{us_east}}"
          - "-------------------"
          - "Country Germany"
          - "-------------------"
          - "{{germany}}"
          - "-------------------"
          - "Country Finlande"
          - "-------------------"
          - "{{finlande}}"
          - "-------------------"
          - "Country United States"
          - "-------------------"
          - "{{usa}}"

    - name: Ansible SelectAttr
      debug:
        msg:
          - "==========================="
          - "With SelectAttr - Filter using Attribute name of Object"
          - "==========================="
          - '{{ hetzner_location | selectattr("city", "eq", "Helsinki") }}'
          - ""
          - "==========================="
          - "With Select - We are filtering using regex as the elements of list are treated as a normal string not as object/dict"
          - "==========================="
          - '{{ hetzner_location | select("match", ".+city.+:.+Helsinki.+")}}'
          - ""
#    - name: "Create addressbook to store"
#      no_log: false
#      set_fact:
#        addressbook: "{{addressbook |default([]) + [{'Name' : item.name, 'country' : item.country, 'Network Zone' : item.network_zone }] }}"
#        addressbook: "{{addressbook |default({}) | combine({'name': item.name}, list_merge='append') }}"
#        addressbook: "{{addressbook + ({ 'name': item.name }) + [{'country' : item.country, 'Network Zone' : item.network_zone}]}}"
#      loop: "{{hetzner_location|json_query('[*]')}}"
#      when: item.key == "name"
#       vars:
#         query: "[*]"
#        query: "[*].{name: name, network_zone: network_zone, country: country}"
#        query: "[?city == '{{ location_name }}'].{name: name, network_zone: network_zone}"

#    - name: The addressbook
#      debug: var=addressbook

######################################################################################
    - name: Load the JSON servers types file content
      set_fact:
        hetzner_server_types: "{{lookup('file', 'vars/hetzner-server-types.json')| from_json }}"
  
    # - name: Affichage du contenu du fichier hetzner-server-types.json
    #   debug: var=hetzner_server_types

    - name: debug
      vars:
        coregroup2to5: "{{ hetzner_server_types | selectattr('cores','>=',2) | selectattr('cores','<=',5) }}"
        core_group_2_to_5_and_shared_cpu: "{{ coregroup2to5 | selectattr('cpu_type','eq','shared')}}"
        # cx31_group: "{{ hetzner_server_types | selectattr('name','==','{{server_type}}')}}"
        cx31_group: "{{ hetzner_server_types | selectattr('name','==','cx31')}}"
      debug:
        msg:
          - "-------------------"
          - "CPU Cores between 2 and 5"
          - "-------------------"
          - "{{coregroup2to5}}"
          - "-------------------"
          - "CPU Cores between 2 and 5 and shared CPU"
          - "-------------------"
          - "{{core_group_2_to_5_and_shared_cpu}}"
          - "-------------------"
          - "CX31 Server type"
          - "-------------------"
          - "{{cx31_group}}"

    # - name: "Traitement des informations concernant les types des serveurs"
    #   no_log: false
    #   set_fact:
    #     server_type_book: "{{ server_type_book|default([]) + [{'name' : item.name, 'Id' : item.id, 'cores' : item.cores, 'disk' : item.disk, 'memory': item.memory }] }}"
    #   with_items: "{{hetzner_server_types|json_query(query)}}"
    #   vars:
    #     query: "[*]"

    # - name: Contenu du dictionnaire server_type_book
    #   debug:
    #     msg: "The server {{ item.name }} has {{ item.cores }} cores with ({{ item.disk }})"
    #   loop: "{{ hetzner_server_types | dict2items }}"
      # loop: "{{ lookup('dict', hetzner_server_types) }}"

    # - debug:
    #     msg: "{{server_type_book | json_query(query)}}"
    #   vars: 
    #     query: "[?name == '{{ server_type }}'].cores"

  # "cores": 1,
  # "cpu_type": "shared",
  # "deprecated": null,
  # "description": "CX11",
  # "disk": 20,
  # "id": 1,
  # "memory": 2,
  # "name": "cx11",